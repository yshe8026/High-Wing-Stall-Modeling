function T1 = importXPfile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   T1 = IMPORTFILE(FILENAME)
%   Reads data from text file FILENAME for the default selection.
%
%   T1 = IMPORTFILE(FILENAME, STARTROW, ENDROW)
%   Reads data from rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   T1 = importfile('T1.txt', 2, 43535);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2022/10/26 15:36:42

%% Initialize variables.
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Read columns of data as text:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%13s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%14s%2s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this code. If an error occurs for a different file, try regenerating the code from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric text to numbers.
% Replace non-numeric text with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = mat2cell(dataArray{col}, ones(length(dataArray{col}), 1));
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99,101,103,105,107,109,111,113,115,117,119,121,123,125,127,129,131,133,135,137,139,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,173,175,177,179,181,183,185,187,189]
    % Converts text in the input cell array to numbers. Replaced non-numeric text with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1)
        % Create a regular expression to detect and remove non-numeric prefixes and suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData(row), regexstr, 'names');
            numbers = result.numbers;

            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if numbers.contains(',')
                thousandsRegExp = '^[-/+]*\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(numbers, thousandsRegExp, 'once'))
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric text to numbers.
            if ~invalidThousandsSeparator
                numbers = textscan(char(strrep(numbers, ',', '')), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch
            raw{row, col} = rawData{row};
        end
    end
end


%% Split data into numeric and string columns.
rawNumericColumns = raw(:, [1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99,101,103,105,107,109,111,113,115,117,119,121,123,125,127,129,131,133,135,137,139,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,173,175,177,179,181,183,185,187,189]);
rawStringColumns = string(raw(:, [2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,191]));


%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),rawNumericColumns); % Find non-numeric cells
rawNumericColumns(R) = {NaN}; % Replace non-numeric cells

%% Make sure any text containing <undefined> is properly converted to an <undefined> categorical
for catIdx = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96]
    idx = (rawStringColumns(:, catIdx) == "<undefined>");
    rawStringColumns(idx, catIdx) = "";
end

%% Create output variable
T1 = table;
T1.real_time = cell2mat(rawNumericColumns(:, 1));
T1.VarName2 = categorical(rawStringColumns(:, 1));
T1.totl_time = cell2mat(rawNumericColumns(:, 2));
T1.VarName4 = categorical(rawStringColumns(:, 2));
T1.missn_time = cell2mat(rawNumericColumns(:, 3));
T1.VarName6 = categorical(rawStringColumns(:, 3));
T1.timer_time = cell2mat(rawNumericColumns(:, 4));
T1.VarName8 = categorical(rawStringColumns(:, 4));
T1.zulu_time = cell2mat(rawNumericColumns(:, 5));
T1.VarName10 = categorical(rawStringColumns(:, 5));
T1.local_time = cell2mat(rawNumericColumns(:, 6));
T1.VarName12 = categorical(rawStringColumns(:, 6));
T1.hobbs_time = cell2mat(rawNumericColumns(:, 7));
T1.VarName14 = categorical(rawStringColumns(:, 7));
T1.Vind_kias = cell2mat(rawNumericColumns(:, 8));
T1.VarName16 = categorical(rawStringColumns(:, 8));
T1.Vind_keas = cell2mat(rawNumericColumns(:, 9));
T1.VarName18 = categorical(rawStringColumns(:, 9));
T1.Vtrue_ktas = cell2mat(rawNumericColumns(:, 10));
T1.VarName20 = categorical(rawStringColumns(:, 10));
T1.Vtrue_ktgs = cell2mat(rawNumericColumns(:, 11));
T1.VarName22 = categorical(rawStringColumns(:, 11));
T1.Vind__mph = cell2mat(rawNumericColumns(:, 12));
T1.VarName24 = categorical(rawStringColumns(:, 12));
T1.Vtruemphas = cell2mat(rawNumericColumns(:, 13));
T1.VarName26 = categorical(rawStringColumns(:, 13));
T1.Vtruemphgs = cell2mat(rawNumericColumns(:, 14));
T1.VarName28 = categorical(rawStringColumns(:, 14));
T1.Machratio = cell2mat(rawNumericColumns(:, 15));
T1.VarName30 = categorical(rawStringColumns(:, 15));
T1.VVI__fpm = cell2mat(rawNumericColumns(:, 16));
T1.VarName32 = categorical(rawStringColumns(:, 16));
T1.Gloadnorml = cell2mat(rawNumericColumns(:, 17));
T1.VarName34 = categorical(rawStringColumns(:, 17));
T1.Gloadaxial = cell2mat(rawNumericColumns(:, 18));
T1.VarName36 = categorical(rawStringColumns(:, 18));
T1.Gload_side = cell2mat(rawNumericColumns(:, 19));
T1.VarName38 = categorical(rawStringColumns(:, 19));
T1.AMprs_inHG = cell2mat(rawNumericColumns(:, 20));
T1.VarName40 = categorical(rawStringColumns(:, 20));
T1.AMtmp_degC = cell2mat(rawNumericColumns(:, 21));
T1.VarName42 = categorical(rawStringColumns(:, 21));
T1.LEtmp_degC = cell2mat(rawNumericColumns(:, 22));
T1.VarName44 = categorical(rawStringColumns(:, 22));
T1.densratio = cell2mat(rawNumericColumns(:, 23));
T1.VarName46 = categorical(rawStringColumns(:, 23));
T1.A_ktas = cell2mat(rawNumericColumns(:, 24));
T1.VarName48 = categorical(rawStringColumns(:, 24));
T1.Q__psf = cell2mat(rawNumericColumns(:, 25));
T1.VarName50 = categorical(rawStringColumns(:, 25));
T1.gravi_fts2 = cell2mat(rawNumericColumns(:, 26));
T1.VarName52 = categorical(rawStringColumns(:, 26));
T1.elevstick = cell2mat(rawNumericColumns(:, 27));
T1.VarName54 = categorical(rawStringColumns(:, 27));
T1.ailrnstick = cell2mat(rawNumericColumns(:, 28));
T1.VarName56 = categorical(rawStringColumns(:, 28));
T1.ruddrstick = cell2mat(rawNumericColumns(:, 29));
T1.VarName58 = categorical(rawStringColumns(:, 29));
T1.elev_surf = cell2mat(rawNumericColumns(:, 30));
T1.VarName60 = categorical(rawStringColumns(:, 30));
T1.ailrn_surf = cell2mat(rawNumericColumns(:, 31));
T1.VarName62 = categorical(rawStringColumns(:, 31));
T1.ruddr_surf = cell2mat(rawNumericColumns(:, 32));
T1.VarName64 = categorical(rawStringColumns(:, 32));
T1.nwhelsteer = cell2mat(rawNumericColumns(:, 33));
T1.VarName66 = categorical(rawStringColumns(:, 33));
T1.trim_elev = cell2mat(rawNumericColumns(:, 34));
T1.VarName68 = categorical(rawStringColumns(:, 34));
T1.trimailrn = cell2mat(rawNumericColumns(:, 35));
T1.VarName70 = categorical(rawStringColumns(:, 35));
T1.trimruddr = cell2mat(rawNumericColumns(:, 36));
T1.VarName72 = categorical(rawStringColumns(:, 36));
T1.flaphandl = cell2mat(rawNumericColumns(:, 37));
T1.VarName74 = categorical(rawStringColumns(:, 37));
T1.flappostn = cell2mat(rawNumericColumns(:, 38));
T1.VarName76 = categorical(rawStringColumns(:, 38));
T1.slatratio = cell2mat(rawNumericColumns(:, 39));
T1.VarName78 = categorical(rawStringColumns(:, 39));
T1.sbrakhandl = cell2mat(rawNumericColumns(:, 40));
T1.VarName80 = categorical(rawStringColumns(:, 40));
T1.sbrakpostn = cell2mat(rawNumericColumns(:, 41));
T1.VarName82 = categorical(rawStringColumns(:, 41));
T1.M_ftlb = cell2mat(rawNumericColumns(:, 42));
T1.VarName84 = categorical(rawStringColumns(:, 42));
T1.L_ftlb = cell2mat(rawNumericColumns(:, 43));
T1.VarName86 = categorical(rawStringColumns(:, 43));
T1.N_ftlb = cell2mat(rawNumericColumns(:, 44));
T1.VarName88 = categorical(rawStringColumns(:, 44));
T1.Qrads = cell2mat(rawNumericColumns(:, 45));
T1.VarName90 = categorical(rawStringColumns(:, 45));
T1.Prads = cell2mat(rawNumericColumns(:, 46));
T1.VarName92 = categorical(rawStringColumns(:, 46));
T1.Rrads = cell2mat(rawNumericColumns(:, 47));
T1.VarName94 = categorical(rawStringColumns(:, 47));
T1.pitch__deg = cell2mat(rawNumericColumns(:, 48));
T1.VarName96 = categorical(rawStringColumns(:, 48));
T1.roll__deg = cell2mat(rawNumericColumns(:, 49));
T1.VarName98 = categorical(rawStringColumns(:, 49));
T1.hding_true = cell2mat(rawNumericColumns(:, 50));
T1.VarName100 = categorical(rawStringColumns(:, 50));
T1.hding__mag = cell2mat(rawNumericColumns(:, 51));
T1.VarName102 = categorical(rawStringColumns(:, 51));
T1.alpha__deg = cell2mat(rawNumericColumns(:, 52));
T1.VarName104 = categorical(rawStringColumns(:, 52));
T1.beta__deg = cell2mat(rawNumericColumns(:, 53));
T1.VarName106 = categorical(rawStringColumns(:, 53));
T1.hpath__deg = cell2mat(rawNumericColumns(:, 54));
T1.VarName108 = categorical(rawStringColumns(:, 54));
T1.vpath__deg = cell2mat(rawNumericColumns(:, 55));
T1.VarName110 = categorical(rawStringColumns(:, 55));
T1.slip__deg = cell2mat(rawNumericColumns(:, 56));
T1.VarName112 = categorical(rawStringColumns(:, 56));
T1.lat__deg = cell2mat(rawNumericColumns(:, 57));
T1.VarName114 = categorical(rawStringColumns(:, 57));
T1.lon__deg = cell2mat(rawNumericColumns(:, 58));
T1.VarName116 = categorical(rawStringColumns(:, 58));
T1.altftmsl = cell2mat(rawNumericColumns(:, 59));
T1.VarName118 = categorical(rawStringColumns(:, 59));
T1.altftagl = cell2mat(rawNumericColumns(:, 60));
T1.VarName120 = categorical(rawStringColumns(:, 60));
T1.onrunwy = cell2mat(rawNumericColumns(:, 61));
T1.VarName122 = categorical(rawStringColumns(:, 61));
T1.alt__ind = cell2mat(rawNumericColumns(:, 62));
T1.VarName124 = categorical(rawStringColumns(:, 62));
T1.latorign = cell2mat(rawNumericColumns(:, 63));
T1.VarName126 = categorical(rawStringColumns(:, 63));
T1.lonorign = cell2mat(rawNumericColumns(:, 64));
T1.VarName128 = categorical(rawStringColumns(:, 64));
T1.thro1_part = cell2mat(rawNumericColumns(:, 65));
T1.VarName130 = categorical(rawStringColumns(:, 65));
T1.thro1_part1 = cell2mat(rawNumericColumns(:, 66));
T1.VarName132 = categorical(rawStringColumns(:, 66));
T1.lift___lb = cell2mat(rawNumericColumns(:, 67));
T1.VarName134 = categorical(rawStringColumns(:, 67));
T1.drag___lb = cell2mat(rawNumericColumns(:, 68));
T1.VarName136 = categorical(rawStringColumns(:, 68));
T1.side___lb = cell2mat(rawNumericColumns(:, 69));
T1.VarName138 = categorical(rawStringColumns(:, 69));
T1.Llbft = cell2mat(rawNumericColumns(:, 70));
T1.VarName140 = categorical(rawStringColumns(:, 70));
T1.Mlbft = cell2mat(rawNumericColumns(:, 71));
T1.VarName142 = categorical(rawStringColumns(:, 71));
T1.Nlbft = cell2mat(rawNumericColumns(:, 72));
T1.VarName144 = categorical(rawStringColumns(:, 72));
T1.norml___lb = cell2mat(rawNumericColumns(:, 73));
T1.VarName146 = categorical(rawStringColumns(:, 73));
T1.axial___lb = cell2mat(rawNumericColumns(:, 74));
T1.VarName148 = categorical(rawStringColumns(:, 74));
T1.side___lb1 = cell2mat(rawNumericColumns(:, 75));
T1.VarName150 = categorical(rawStringColumns(:, 75));
T1.LDratio = cell2mat(rawNumericColumns(:, 76));
T1.VarName152 = categorical(rawStringColumns(:, 76));
T1.cltotal = cell2mat(rawNumericColumns(:, 77));
T1.VarName154 = categorical(rawStringColumns(:, 77));
T1.cdtotal = cell2mat(rawNumericColumns(:, 78));
T1.VarName156 = categorical(rawStringColumns(:, 78));
T1.LDetaP = cell2mat(rawNumericColumns(:, 79));
T1.VarName158 = categorical(rawStringColumns(:, 79));
T1.elev1__deg = cell2mat(rawNumericColumns(:, 80));
T1.VarName160 = categorical(rawStringColumns(:, 80));
T1.elev1__deg1 = cell2mat(rawNumericColumns(:, 81));
T1.VarName162 = categorical(rawStringColumns(:, 81));
T1.elev2__deg = cell2mat(rawNumericColumns(:, 82));
T1.VarName164 = categorical(rawStringColumns(:, 82));
T1.elev2__deg1 = cell2mat(rawNumericColumns(:, 83));
T1.VarName166 = categorical(rawStringColumns(:, 83));
T1.rudr1__deg = cell2mat(rawNumericColumns(:, 84));
T1.VarName168 = categorical(rawStringColumns(:, 84));
T1.rudr1__deg1 = cell2mat(rawNumericColumns(:, 85));
T1.VarName170 = categorical(rawStringColumns(:, 85));
T1.rudr2__deg = cell2mat(rawNumericColumns(:, 86));
T1.VarName172 = categorical(rawStringColumns(:, 86));
T1.rudr2__deg1 = cell2mat(rawNumericColumns(:, 87));
T1.VarName174 = categorical(rawStringColumns(:, 87));
T1.Lailn1deg = cell2mat(rawNumericColumns(:, 88));
T1.VarName176 = categorical(rawStringColumns(:, 88));
T1.Railn1deg = cell2mat(rawNumericColumns(:, 89));
T1.VarName178 = categorical(rawStringColumns(:, 89));
T1.Lailn1deg1 = cell2mat(rawNumericColumns(:, 90));
T1.VarName180 = categorical(rawStringColumns(:, 90));
T1.Railn1deg1 = cell2mat(rawNumericColumns(:, 91));
T1.VarName182 = categorical(rawStringColumns(:, 91));
T1.Lailn1deg2 = cell2mat(rawNumericColumns(:, 92));
T1.VarName184 = categorical(rawStringColumns(:, 92));
T1.Railn1deg2 = cell2mat(rawNumericColumns(:, 93));
T1.VarName186 = categorical(rawStringColumns(:, 93));
T1.Lailn1deg3 = cell2mat(rawNumericColumns(:, 94));
T1.VarName188 = categorical(rawStringColumns(:, 94));
T1.Railn1deg3 = cell2mat(rawNumericColumns(:, 95));
T1.VarName190 = categorical(rawStringColumns(:, 95));
T1.VarName191 = categorical(rawStringColumns(:, 96));

